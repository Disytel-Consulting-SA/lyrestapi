/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.46).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.libertya.api.stub.iface;

import org.libertya.api.stub.model.DocType;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;


@Validated
public interface DoctypeApi {

    Logger log = LoggerFactory.getLogger(DoctypeApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @Operation(summary = "Nuevo articulo", description = "Agrega un nuevo tipo de documento", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "doctype" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK. ID del tipo de documento creado es retornado", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "409", description = "Imposible insertar", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/v1.0/doctypes",
        produces = { "text/plain" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<String> addDocType(@Parameter(in = ParameterIn.DEFAULT, description = "", required=true, schema=@Schema()) @Valid @RequestBody DocType body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DoctypeApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Elimina un tipo de documento", description = "Elimina un tipo de documento existente", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "doctype" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "409", description = "Imposible eliminar", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "404", description = "No encontrado", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "204", description = "OK", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/v1.0/doctypes/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<String> deleteDocType(@Parameter(in = ParameterIn.PATH, description = "ID del tipo de documento", required=true, schema=@Schema()) @PathVariable("id") Integer id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DoctypeApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Retrieve all document types", description = "Retorna la lista completa de tipos de documento", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "doctype" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = DocType.class)))) })
    @RequestMapping(value = "/v1.0/doctypes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<DocType>> getAllDocTypes(@Parameter(in = ParameterIn.QUERY, description = "Criterio de filtrado" ,schema=@Schema()) @Valid @RequestParam(value = "filter", required = false) String filter, @Parameter(in = ParameterIn.QUERY, description = "Campos a recuperar" ,schema=@Schema()) @Valid @RequestParam(value = "fields", required = false) String fields, @Parameter(in = ParameterIn.QUERY, description = "Criterio de ordenado" ,schema=@Schema()) @Valid @RequestParam(value = "sort", required = false) String sort, @Parameter(in = ParameterIn.QUERY, description = "Limite de elementos a retornar por pagina" ,schema=@Schema()) @Valid @RequestParam(value = "limit", required = false) Integer limit, @Parameter(in = ParameterIn.QUERY, description = "Numero de pagina" ,schema=@Schema()) @Valid @RequestParam(value = "page", required = false) Integer page) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {\n  \"docsubtypecae\" : \"docsubtypecae\",\n  \"fiscalprintingfooterlegends\" : \"fiscalprintingfooterlegends\",\n  \"inout_allow_greater_qtyordered\" : true,\n  \"updatedby\" : 9,\n  \"allowotherbatchpaymentdate\" : true,\n  \"posenabledue\" : true,\n  \"allowdeliveryreturned\" : true,\n  \"c_controlador_fiscal_id\" : 5,\n  \"linescountmax\" : 1,\n  \"dragorderdocumentsurcharges\" : true,\n  \"allowproposaldue\" : true,\n  \"docnosequence_unique_id\" : 1,\n  \"isdefaultcounterdoc\" : true,\n  \"docsubtypeso\" : \"docsubtypeso\",\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"dragorderlinediscounts\" : true,\n  \"ad_process_id\" : 5,\n  \"createdby\" : 7,\n  \"dragorderlinesurcharges\" : true,\n  \"hasproforma\" : true,\n  \"isreceiptseq\" : true,\n  \"skipcurrentaccounts\" : true,\n  \"iswarehouseclosurecontrol\" : true,\n  \"enableincreatefromshipment\" : true,\n  \"ad_client_id\" : 0,\n  \"isdefault\" : true,\n  \"iselectronic\" : true,\n  \"reusedocumentno\" : true,\n  \"hascharges\" : true,\n  \"printername\" : \"printername\",\n  \"applyperception\" : true,\n  \"allowonlyproviders\" : true,\n  \"created\" : \"created\",\n  \"isintransit\" : true,\n  \"m_trannaturecodea_id\" : 4.965218492984954,\n  \"docsubtypeinv\" : \"docsubtypeinv\",\n  \"fiscaldocument\" : \"fiscaldocument\",\n  \"documentnote\" : \"documentnote\",\n  \"gl_category_id\" : 7,\n  \"additionalvalues\" : [ {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  } ],\n  \"reservestockmanagment\" : true,\n  \"allowchangepricelist\" : true,\n  \"name\" : \"name\",\n  \"doctypekey\" : \"doctypekey\",\n  \"uniquedocumentno\" : true,\n  \"enabledinpos\" : true,\n  \"isfiscal\" : true,\n  \"dragorderprice\" : true,\n  \"signo_issotrx\" : \"signo_issotrx\",\n  \"updated\" : \"updated\",\n  \"issotrx\" : true,\n  \"c_doctypedifference_id\" : 2,\n  \"ischeckoutplacerestricted\" : true,\n  \"ispaymentorderseq\" : true,\n  \"ad_org_id\" : 6,\n  \"isactive\" : true,\n  \"referencedvalues\" : [ null, null ],\n  \"printname\" : \"printname\",\n  \"description\" : \"description\",\n  \"onlyvendorproducts\" : true,\n  \"cai\" : \"cai\",\n  \"m_trannaturecodeb_id\" : 5.025004791520295,\n  \"dragorderdocumentdiscounts\" : true,\n  \"c_doctype_id\" : 7,\n  \"c_doctypeinvoice_id\" : 9,\n  \"isfiscaldocument\" : true,\n  \"issplitwhendifference\" : true,\n  \"c_invoice_id\" : 4,\n  \"docbasetype\" : \"docbasetype\",\n  \"caicontrol\" : true,\n  \"c_doctypeshipment_id\" : 2,\n  \"datecai\" : \"datecai\",\n  \"validateseqlength\" : true,\n  \"c_reversedoctype_id\" : 1,\n  \"isprintpreview\" : true,\n  \"c_doctypeproforma_id\" : 3,\n  \"lockseq\" : true,\n  \"isprintatcompleting\" : true,\n  \"isdocnocontrolled\" : true,\n  \"transactiontypefrontliva\" : \"transactiontypefrontliva\",\n  \"documentcopies\" : 6,\n  \"notinvoiceable\" : true,\n  \"ispickqaconfirm\" : true,\n  \"iscreatecounter\" : true,\n  \"applyretention\" : true,\n  \"docnosequence_id\" : 1,\n  \"isshipconfirm\" : true,\n  \"open_close_by_pos\" : true,\n  \"ad_printformat_id\" : 1,\n  \"useorderwarehouse\" : true,\n  \"posenableduedays\" : 9\n}, {\n  \"docsubtypecae\" : \"docsubtypecae\",\n  \"fiscalprintingfooterlegends\" : \"fiscalprintingfooterlegends\",\n  \"inout_allow_greater_qtyordered\" : true,\n  \"updatedby\" : 9,\n  \"allowotherbatchpaymentdate\" : true,\n  \"posenabledue\" : true,\n  \"allowdeliveryreturned\" : true,\n  \"c_controlador_fiscal_id\" : 5,\n  \"linescountmax\" : 1,\n  \"dragorderdocumentsurcharges\" : true,\n  \"allowproposaldue\" : true,\n  \"docnosequence_unique_id\" : 1,\n  \"isdefaultcounterdoc\" : true,\n  \"docsubtypeso\" : \"docsubtypeso\",\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"dragorderlinediscounts\" : true,\n  \"ad_process_id\" : 5,\n  \"createdby\" : 7,\n  \"dragorderlinesurcharges\" : true,\n  \"hasproforma\" : true,\n  \"isreceiptseq\" : true,\n  \"skipcurrentaccounts\" : true,\n  \"iswarehouseclosurecontrol\" : true,\n  \"enableincreatefromshipment\" : true,\n  \"ad_client_id\" : 0,\n  \"isdefault\" : true,\n  \"iselectronic\" : true,\n  \"reusedocumentno\" : true,\n  \"hascharges\" : true,\n  \"printername\" : \"printername\",\n  \"applyperception\" : true,\n  \"allowonlyproviders\" : true,\n  \"created\" : \"created\",\n  \"isintransit\" : true,\n  \"m_trannaturecodea_id\" : 4.965218492984954,\n  \"docsubtypeinv\" : \"docsubtypeinv\",\n  \"fiscaldocument\" : \"fiscaldocument\",\n  \"documentnote\" : \"documentnote\",\n  \"gl_category_id\" : 7,\n  \"additionalvalues\" : [ {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  } ],\n  \"reservestockmanagment\" : true,\n  \"allowchangepricelist\" : true,\n  \"name\" : \"name\",\n  \"doctypekey\" : \"doctypekey\",\n  \"uniquedocumentno\" : true,\n  \"enabledinpos\" : true,\n  \"isfiscal\" : true,\n  \"dragorderprice\" : true,\n  \"signo_issotrx\" : \"signo_issotrx\",\n  \"updated\" : \"updated\",\n  \"issotrx\" : true,\n  \"c_doctypedifference_id\" : 2,\n  \"ischeckoutplacerestricted\" : true,\n  \"ispaymentorderseq\" : true,\n  \"ad_org_id\" : 6,\n  \"isactive\" : true,\n  \"referencedvalues\" : [ null, null ],\n  \"printname\" : \"printname\",\n  \"description\" : \"description\",\n  \"onlyvendorproducts\" : true,\n  \"cai\" : \"cai\",\n  \"m_trannaturecodeb_id\" : 5.025004791520295,\n  \"dragorderdocumentdiscounts\" : true,\n  \"c_doctype_id\" : 7,\n  \"c_doctypeinvoice_id\" : 9,\n  \"isfiscaldocument\" : true,\n  \"issplitwhendifference\" : true,\n  \"c_invoice_id\" : 4,\n  \"docbasetype\" : \"docbasetype\",\n  \"caicontrol\" : true,\n  \"c_doctypeshipment_id\" : 2,\n  \"datecai\" : \"datecai\",\n  \"validateseqlength\" : true,\n  \"c_reversedoctype_id\" : 1,\n  \"isprintpreview\" : true,\n  \"c_doctypeproforma_id\" : 3,\n  \"lockseq\" : true,\n  \"isprintatcompleting\" : true,\n  \"isdocnocontrolled\" : true,\n  \"transactiontypefrontliva\" : \"transactiontypefrontliva\",\n  \"documentcopies\" : 6,\n  \"notinvoiceable\" : true,\n  \"ispickqaconfirm\" : true,\n  \"iscreatecounter\" : true,\n  \"applyretention\" : true,\n  \"docnosequence_id\" : 1,\n  \"isshipconfirm\" : true,\n  \"open_close_by_pos\" : true,\n  \"ad_printformat_id\" : 1,\n  \"useorderwarehouse\" : true,\n  \"posenableduedays\" : 9\n} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DoctypeApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Recupera un tipo de documento en particular", description = "Recupera la informacion de un tipo de documento en particular", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "doctype" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = DocType.class))) })
    @RequestMapping(value = "/v1.0/doctypes/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<DocType> retrieveDocType(@Parameter(in = ParameterIn.PATH, description = "ID del tipo de documento", required=true, schema=@Schema()) @PathVariable("id") Integer id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"docsubtypecae\" : \"docsubtypecae\",\n  \"fiscalprintingfooterlegends\" : \"fiscalprintingfooterlegends\",\n  \"inout_allow_greater_qtyordered\" : true,\n  \"updatedby\" : 9,\n  \"allowotherbatchpaymentdate\" : true,\n  \"posenabledue\" : true,\n  \"allowdeliveryreturned\" : true,\n  \"c_controlador_fiscal_id\" : 5,\n  \"linescountmax\" : 1,\n  \"dragorderdocumentsurcharges\" : true,\n  \"allowproposaldue\" : true,\n  \"docnosequence_unique_id\" : 1,\n  \"isdefaultcounterdoc\" : true,\n  \"docsubtypeso\" : \"docsubtypeso\",\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"dragorderlinediscounts\" : true,\n  \"ad_process_id\" : 5,\n  \"createdby\" : 7,\n  \"dragorderlinesurcharges\" : true,\n  \"hasproforma\" : true,\n  \"isreceiptseq\" : true,\n  \"skipcurrentaccounts\" : true,\n  \"iswarehouseclosurecontrol\" : true,\n  \"enableincreatefromshipment\" : true,\n  \"ad_client_id\" : 0,\n  \"isdefault\" : true,\n  \"iselectronic\" : true,\n  \"reusedocumentno\" : true,\n  \"hascharges\" : true,\n  \"printername\" : \"printername\",\n  \"applyperception\" : true,\n  \"allowonlyproviders\" : true,\n  \"created\" : \"created\",\n  \"isintransit\" : true,\n  \"m_trannaturecodea_id\" : 4.965218492984954,\n  \"docsubtypeinv\" : \"docsubtypeinv\",\n  \"fiscaldocument\" : \"fiscaldocument\",\n  \"documentnote\" : \"documentnote\",\n  \"gl_category_id\" : 7,\n  \"additionalvalues\" : [ {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  } ],\n  \"reservestockmanagment\" : true,\n  \"allowchangepricelist\" : true,\n  \"name\" : \"name\",\n  \"doctypekey\" : \"doctypekey\",\n  \"uniquedocumentno\" : true,\n  \"enabledinpos\" : true,\n  \"isfiscal\" : true,\n  \"dragorderprice\" : true,\n  \"signo_issotrx\" : \"signo_issotrx\",\n  \"updated\" : \"updated\",\n  \"issotrx\" : true,\n  \"c_doctypedifference_id\" : 2,\n  \"ischeckoutplacerestricted\" : true,\n  \"ispaymentorderseq\" : true,\n  \"ad_org_id\" : 6,\n  \"isactive\" : true,\n  \"referencedvalues\" : [ null, null ],\n  \"printname\" : \"printname\",\n  \"description\" : \"description\",\n  \"onlyvendorproducts\" : true,\n  \"cai\" : \"cai\",\n  \"m_trannaturecodeb_id\" : 5.025004791520295,\n  \"dragorderdocumentdiscounts\" : true,\n  \"c_doctype_id\" : 7,\n  \"c_doctypeinvoice_id\" : 9,\n  \"isfiscaldocument\" : true,\n  \"issplitwhendifference\" : true,\n  \"c_invoice_id\" : 4,\n  \"docbasetype\" : \"docbasetype\",\n  \"caicontrol\" : true,\n  \"c_doctypeshipment_id\" : 2,\n  \"datecai\" : \"datecai\",\n  \"validateseqlength\" : true,\n  \"c_reversedoctype_id\" : 1,\n  \"isprintpreview\" : true,\n  \"c_doctypeproforma_id\" : 3,\n  \"lockseq\" : true,\n  \"isprintatcompleting\" : true,\n  \"isdocnocontrolled\" : true,\n  \"transactiontypefrontliva\" : \"transactiontypefrontliva\",\n  \"documentcopies\" : 6,\n  \"notinvoiceable\" : true,\n  \"ispickqaconfirm\" : true,\n  \"iscreatecounter\" : true,\n  \"applyretention\" : true,\n  \"docnosequence_id\" : 1,\n  \"isshipconfirm\" : true,\n  \"open_close_by_pos\" : true,\n  \"ad_printformat_id\" : 1,\n  \"useorderwarehouse\" : true,\n  \"posenableduedays\" : 9\n}", DocType.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DoctypeApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Actualiza por completo un tipo de documento existente", description = "", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "doctype" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "409", description = "Imposible actualizar", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "404", description = "No encontrado", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/v1.0/doctypes/{id}",
        produces = { "text/plain" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<String> updateDocType(@Parameter(in = ParameterIn.PATH, description = "ID del tipo de documento a actualizar", required=true, schema=@Schema()) @PathVariable("id") Integer id, @Parameter(in = ParameterIn.DEFAULT, description = "", required=true, schema=@Schema()) @Valid @RequestBody DocType body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DoctypeApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}

