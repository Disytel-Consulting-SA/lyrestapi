/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.libertya.api.stub.iface;

import org.libertya.api.stub.model.CashLine;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Api(value = "Cashline", description = "the Cashline API")
public interface CashlineApi {

    Logger log = LoggerFactory.getLogger(CashlineApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Nueva linea de efectivo", nickname = "addCashLine", notes = "Agrega una nueva linea de efectivo", response = String.class, tags={ "cashline", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK. ID de linea de efectivo es retornado", response = String.class),
        @ApiResponse(code = 409, message = "Imposible insertar", response = String.class) })
    @RequestMapping(value = "/v1.0/cashlines",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<String> addCashLine(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CashLine body
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CashlineApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Elimina una linea de efectivo", nickname = "deleteCashLine", notes = "Elimina una linea de efectivo existente", response = String.class, tags={ "cashline", })
    @ApiResponses(value = { 
        @ApiResponse(code = 409, message = "Imposible eliminar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class),
        @ApiResponse(code = 204, message = "OK", response = String.class) })
    @RequestMapping(value = "/v1.0/cashlines/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<String> deleteCashLine(@ApiParam(value = "ID de la linea de efectivo",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CashlineApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Retrieve all cash lines", nickname = "getAllCashLines", notes = "Retorna la lista completa de lineas de efectivo", response = CashLine.class, responseContainer = "List", tags={ "cashline", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = CashLine.class, responseContainer = "List") })
    @RequestMapping(value = "/v1.0/cashlines",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<CashLine>> getAllCashLines(@ApiParam(value = "Criterio de filtrado") @Valid @RequestParam(value = "filter", required = false) String filter
,@ApiParam(value = "Campos a recuperar") @Valid @RequestParam(value = "fields", required = false) String fields
,@ApiParam(value = "Criterio de ordenado") @Valid @RequestParam(value = "sort", required = false) String sort
,@ApiParam(value = "Limite de elementos a retornar por pagina") @Valid @RequestParam(value = "limit", required = false) Integer limit
,@ApiParam(value = "Desplazamiento de salto a patir del primer elemento") @Valid @RequestParam(value = "offset", required = false) Integer offset
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {\n  \"isgenerated\" : true,\n  \"automaticgenerated\" : true,\n  \"updatebpbalance\" : true,\n  \"updatedby\" : 8,\n  \"ad_org_id\" : 1,\n  \"line\" : 9,\n  \"isactive\" : true,\n  \"description\" : \"description\",\n  \"authmatch\" : true,\n  \"c_invoice_id\" : 1,\n  \"c_cash_id\" : 2,\n  \"transfercashline_id\" : 6,\n  \"cashtype\" : \"cashtype\",\n  \"createdby\" : 4,\n  \"c_posjournal_id\" : 6,\n  \"ad_client_id\" : 6,\n  \"c_allocationhdr_id\" : 5,\n  \"docstatus\" : \"docstatus\",\n  \"transfercash_id\" : 9,\n  \"discountamt\" : 5.025004791520295,\n  \"amount\" : 5.962133916683182,\n  \"c_currency_id\" : 1,\n  \"c_payment_id\" : 1,\n  \"created\" : \"created\",\n  \"c_charge_id\" : 7,\n  \"c_pospaymentmedium_id\" : 7,\n  \"whiteoffamt\" : 9.018348186070783,\n  \"c_bankaccount_id\" : 7,\n  \"c_cashcurrency_id\" : 3,\n  \"authcode\" : \"authcode\",\n  \"processed\" : true,\n  \"writeoffamt\" : 6.438423552598547,\n  \"cashamount\" : 2.3021358869347655,\n  \"c_cashline_id\" : 4,\n  \"c_project_id\" : 1,\n  \"processing\" : true,\n  \"accounting_c_charge_id\" : 0,\n  \"updated\" : \"updated\",\n  \"c_bpartner_id\" : 9,\n  \"isallocated\" : true\n}, {\n  \"isgenerated\" : true,\n  \"automaticgenerated\" : true,\n  \"updatebpbalance\" : true,\n  \"updatedby\" : 8,\n  \"ad_org_id\" : 1,\n  \"line\" : 9,\n  \"isactive\" : true,\n  \"description\" : \"description\",\n  \"authmatch\" : true,\n  \"c_invoice_id\" : 1,\n  \"c_cash_id\" : 2,\n  \"transfercashline_id\" : 6,\n  \"cashtype\" : \"cashtype\",\n  \"createdby\" : 4,\n  \"c_posjournal_id\" : 6,\n  \"ad_client_id\" : 6,\n  \"c_allocationhdr_id\" : 5,\n  \"docstatus\" : \"docstatus\",\n  \"transfercash_id\" : 9,\n  \"discountamt\" : 5.025004791520295,\n  \"amount\" : 5.962133916683182,\n  \"c_currency_id\" : 1,\n  \"c_payment_id\" : 1,\n  \"created\" : \"created\",\n  \"c_charge_id\" : 7,\n  \"c_pospaymentmedium_id\" : 7,\n  \"whiteoffamt\" : 9.018348186070783,\n  \"c_bankaccount_id\" : 7,\n  \"c_cashcurrency_id\" : 3,\n  \"authcode\" : \"authcode\",\n  \"processed\" : true,\n  \"writeoffamt\" : 6.438423552598547,\n  \"cashamount\" : 2.3021358869347655,\n  \"c_cashline_id\" : 4,\n  \"c_project_id\" : 1,\n  \"processing\" : true,\n  \"accounting_c_charge_id\" : 0,\n  \"updated\" : \"updated\",\n  \"c_bpartner_id\" : 9,\n  \"isallocated\" : true\n} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CashlineApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Procesa una linea de efectivo", nickname = "processCashLine", notes = "", response = String.class, tags={ "cashline", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 409, message = "Imposible procesar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class) })
    @RequestMapping(value = "/v1.0/cashlines/{id}/process",
        produces = { "text/plain" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<String> processCashLine(@ApiParam(value = "ID de la linea de efectivo a procesar",required=true) @PathVariable("id") Integer id
,@NotNull @ApiParam(value = "Accion a aplicar (completar, revertir, etc.)", required = true) @Valid @RequestParam(value = "action", required = true) String action
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CashlineApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Recupera una linea de efectivo particular", nickname = "retrieveCashLine", notes = "Recupera la informacion de una linea de efectivo en particular", response = CashLine.class, tags={ "cashline", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = CashLine.class) })
    @RequestMapping(value = "/v1.0/cashlines/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<CashLine> retrieveCashLine(@ApiParam(value = "ID de la linea de efectivo",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"isgenerated\" : true,\n  \"automaticgenerated\" : true,\n  \"updatebpbalance\" : true,\n  \"updatedby\" : 8,\n  \"ad_org_id\" : 1,\n  \"line\" : 9,\n  \"isactive\" : true,\n  \"description\" : \"description\",\n  \"authmatch\" : true,\n  \"c_invoice_id\" : 1,\n  \"c_cash_id\" : 2,\n  \"transfercashline_id\" : 6,\n  \"cashtype\" : \"cashtype\",\n  \"createdby\" : 4,\n  \"c_posjournal_id\" : 6,\n  \"ad_client_id\" : 6,\n  \"c_allocationhdr_id\" : 5,\n  \"docstatus\" : \"docstatus\",\n  \"transfercash_id\" : 9,\n  \"discountamt\" : 5.025004791520295,\n  \"amount\" : 5.962133916683182,\n  \"c_currency_id\" : 1,\n  \"c_payment_id\" : 1,\n  \"created\" : \"created\",\n  \"c_charge_id\" : 7,\n  \"c_pospaymentmedium_id\" : 7,\n  \"whiteoffamt\" : 9.018348186070783,\n  \"c_bankaccount_id\" : 7,\n  \"c_cashcurrency_id\" : 3,\n  \"authcode\" : \"authcode\",\n  \"processed\" : true,\n  \"writeoffamt\" : 6.438423552598547,\n  \"cashamount\" : 2.3021358869347655,\n  \"c_cashline_id\" : 4,\n  \"c_project_id\" : 1,\n  \"processing\" : true,\n  \"accounting_c_charge_id\" : 0,\n  \"updated\" : \"updated\",\n  \"c_bpartner_id\" : 9,\n  \"isallocated\" : true\n}", CashLine.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CashlineApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Actualiza por completo una linea de efectivo existente", nickname = "updateCashLine", notes = "", response = String.class, tags={ "cashline", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 409, message = "Imposible actualizar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class) })
    @RequestMapping(value = "/v1.0/cashlines/{id}",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<String> updateCashLine(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CashLine body
,@ApiParam(value = "ID de la linea de efectivo a actualizar",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CashlineApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
