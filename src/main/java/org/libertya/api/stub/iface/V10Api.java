/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.libertya.api.stub.iface;

import org.libertya.api.stub.model.Entity;
import org.libertya.api.stub.model.SimpleMap;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-12-22T09:54:46.337-03:00[America/Argentina/Buenos_Aires]")
@Api(value = "v1.0", description = "the v1.0 API")
public interface V10Api {

    @ApiOperation(value = "Nuevo articulo", nickname = "addProduct", notes = "Agrega un nuevo articulo", response = String.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK. ID de producto creado es retornado", response = String.class) })
    @RequestMapping(value = "/v1.0/products",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> addProduct(@ApiParam(value = "" ,required=true )  @Valid @RequestBody List<SimpleMap> body
);


    @ApiOperation(value = "Elimina un articulo", nickname = "deleteProduct", notes = "Elimina un articulo existente", response = String.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<String> deleteProduct(@ApiParam(value = "ID de articulo",required=true) @PathVariable("id") Integer id
);


    @ApiOperation(value = "Retrieve all products", nickname = "getAllProducts", notes = "Retorna la lista completa de articulos", response = Entity.class, responseContainer = "List", tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Entity.class, responseContainer = "List") })
    @RequestMapping(value = "/v1.0/products",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Entity>> getAllProducts();


    @ApiOperation(value = "Recupera un producto en particular", nickname = "retrieveProduct", notes = "Recupera la informacion de un articulo en particular", response = Entity.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Entity.class) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Entity> retrieveProduct(@ApiParam(value = "ID del articulo",required=true) @PathVariable("id") Integer id
);


    @ApiOperation(value = "Actualiza un articulo existente", nickname = "updateProduct", notes = "", response = String.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<String> updateProduct(@ApiParam(value = "" ,required=true )  @Valid @RequestBody List<SimpleMap> body
,@ApiParam(value = "ID del articulo a actualizar",required=true) @PathVariable("id") Integer id
);

}
