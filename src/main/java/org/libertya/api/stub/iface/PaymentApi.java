/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.libertya.api.stub.iface;

import org.libertya.api.stub.model.Payment;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Api(value = "Payment", description = "the Payment API")
public interface PaymentApi {

    Logger log = LoggerFactory.getLogger(PaymentApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Nuevo pago", nickname = "addPayment", notes = "Agrega un nuevo pago", response = String.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK. ID de pago creado es retornado", response = String.class),
        @ApiResponse(code = 409, message = "Imposible insertar", response = String.class) })
    @RequestMapping(value = "/v1.0/payments",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<String> addPayment(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Payment body
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PaymentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Elimina un pago", nickname = "deletePayment", notes = "Elimina un pago existente", response = String.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 409, message = "Imposible eliminar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class),
        @ApiResponse(code = 204, message = "OK", response = String.class) })
    @RequestMapping(value = "/v1.0/payments/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<String> deletePayment(@ApiParam(value = "ID del pago",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PaymentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Retrieve all payments", nickname = "getAllPayments", notes = "Retorna la lista completa de pagos", response = Payment.class, responseContainer = "List", tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Payment.class, responseContainer = "List") })
    @RequestMapping(value = "/v1.0/payments",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Payment>> getAllPayments(@ApiParam(value = "Criterio de filtrado") @Valid @RequestParam(value = "filter", required = false) String filter
,@ApiParam(value = "Campos a recuperar") @Valid @RequestParam(value = "fields", required = false) String fields
,@ApiParam(value = "Criterio de ordenado") @Valid @RequestParam(value = "sort", required = false) String sort
,@ApiParam(value = "Limite de elementos a retornar por pagina") @Valid @RequestParam(value = "limit", required = false) Integer limit
,@ApiParam(value = "Numero de pagina") @Valid @RequestParam(value = "page", required = false) Integer page
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {\n  \"r_avszip\" : \"r_avszip\",\n  \"dateemissioncheck\" : \"dateemissioncheck\",\n  \"r_authcode_dc\" : \"r_authcode_dc\",\n  \"rejecteddate\" : \"rejecteddate\",\n  \"chargeamt\" : 6,\n  \"c_campaign_id\" : 4,\n  \"isreconciled\" : true,\n  \"creditcardexpmm\" : 6,\n  \"docstatus\" : \"docstatus\",\n  \"ref_payment_id\" : 6,\n  \"dateacct\" : \"dateacct\",\n  \"r_avsaddr\" : \"r_avsaddr\",\n  \"ismanual\" : true,\n  \"m_boletadeposito_id\" : 1,\n  \"a_email\" : \"a_email\",\n  \"bank_payment_date\" : \"bank_payment_date\",\n  \"m_entidadfinancieraplan_id\" : 2,\n  \"a_country\" : \"a_country\",\n  \"a_street\" : \"a_street\",\n  \"c_conversiontype_id\" : 1,\n  \"micr\" : \"micr\",\n  \"user1_id\" : 7,\n  \"accounting_c_charge_id\" : 0,\n  \"isallocated\" : true,\n  \"c_bp_bankaccount_id\" : 2,\n  \"creditcardnumber\" : \"creditcardnumber\",\n  \"original_ref_payment_id\" : 6,\n  \"routingno\" : \"routingno\",\n  \"isactive\" : true,\n  \"datetrx\" : \"datetrx\",\n  \"c_doctype_id\" : 1,\n  \"c_invoice_id\" : 1,\n  \"c_order_id\" : 4,\n  \"c_paymentbatch_id\" : 5,\n  \"trxtype\" : \"trxtype\",\n  \"bank_payment_msg_description\" : \"bank_payment_msg_description\",\n  \"a_name\" : \"a_name\",\n  \"rejectedcomments\" : \"rejectedcomments\",\n  \"creditcardvv\" : \"creditcardvv\",\n  \"ad_orgtrx_id\" : 5,\n  \"isapproved\" : true,\n  \"isselfservice\" : true,\n  \"a_city\" : \"a_city\",\n  \"c_pospaymentmedium_id\" : 6,\n  \"c_bankaccount_id\" : 2,\n  \"documentno\" : \"documentno\",\n  \"a_ident_dl\" : \"a_ident_dl\",\n  \"isreceipt\" : \"isreceipt\",\n  \"c_project_id\" : 8,\n  \"ponum\" : \"ponum\",\n  \"creditcardtype\" : \"creditcardtype\",\n  \"updatedby\" : 3,\n  \"c_activity_id\" : 5,\n  \"r_pnref_dc\" : \"r_pnref_dc\",\n  \"r_result\" : \"r_result\",\n  \"isprepayment\" : true,\n  \"payamt\" : 5.944895607614016,\n  \"isonline\" : true,\n  \"creditcardexpyy\" : 3,\n  \"r_cvv2match\" : true,\n  \"createdby\" : 9,\n  \"r_respmsg\" : \"r_respmsg\",\n  \"checked\" : true,\n  \"checkstatus\" : \"checkstatus\",\n  \"c_posjournal_id\" : 9,\n  \"ad_client_id\" : 6,\n  \"user2_id\" : 0,\n  \"isdelayedcapture\" : true,\n  \"couponbatchnumber\" : \"couponbatchnumber\",\n  \"c_currency_id\" : 1,\n  \"c_bankpaymentstatus_id\" : 9,\n  \"created\" : \"created\",\n  \"couponnumber\" : \"couponnumber\",\n  \"r_info\" : \"r_info\",\n  \"writeoffamt\" : 7.058770351582356,\n  \"a_bank\" : \"a_bank\",\n  \"swipe\" : \"swipe\",\n  \"accountno\" : \"accountno\",\n  \"posnet\" : \"posnet\",\n  \"taxamt\" : 3.353193347011243,\n  \"r_authcode\" : \"r_authcode\",\n  \"updated\" : \"updated\",\n  \"bank_payment_documentno\" : \"bank_payment_documentno\",\n  \"c_bpartner_id\" : 3,\n  \"a_zip\" : \"a_zip\",\n  \"issotrx\" : true,\n  \"voiceauthcode\" : \"voiceauthcode\",\n  \"tendertype\" : \"tendertype\",\n  \"ad_org_id\" : 1,\n  \"r_pnref\" : \"r_pnref\",\n  \"description\" : \"description\",\n  \"isoverunderpayment\" : true,\n  \"authmatch\" : true,\n  \"c_bank_id\" : 7,\n  \"a_state\" : \"a_state\",\n  \"a_cuit\" : \"a_cuit\",\n  \"orig_trxid\" : \"orig_trxid\",\n  \"overunderamt\" : 6.878052220127876,\n  \"discountamt\" : 6.965117697638846,\n  \"auditstatus\" : \"auditstatus\",\n  \"c_payment_id\" : 9,\n  \"c_invoice_check_rejected_id\" : 7,\n  \"a_ident_ssn\" : \"a_ident_ssn\",\n  \"c_charge_id\" : 7,\n  \"banklist_registerno\" : \"banklist_registerno\",\n  \"authcode\" : \"authcode\",\n  \"processed\" : true,\n  \"duedate\" : \"duedate\",\n  \"checkno\" : \"checkno\"\n}, {\n  \"r_avszip\" : \"r_avszip\",\n  \"dateemissioncheck\" : \"dateemissioncheck\",\n  \"r_authcode_dc\" : \"r_authcode_dc\",\n  \"rejecteddate\" : \"rejecteddate\",\n  \"chargeamt\" : 6,\n  \"c_campaign_id\" : 4,\n  \"isreconciled\" : true,\n  \"creditcardexpmm\" : 6,\n  \"docstatus\" : \"docstatus\",\n  \"ref_payment_id\" : 6,\n  \"dateacct\" : \"dateacct\",\n  \"r_avsaddr\" : \"r_avsaddr\",\n  \"ismanual\" : true,\n  \"m_boletadeposito_id\" : 1,\n  \"a_email\" : \"a_email\",\n  \"bank_payment_date\" : \"bank_payment_date\",\n  \"m_entidadfinancieraplan_id\" : 2,\n  \"a_country\" : \"a_country\",\n  \"a_street\" : \"a_street\",\n  \"c_conversiontype_id\" : 1,\n  \"micr\" : \"micr\",\n  \"user1_id\" : 7,\n  \"accounting_c_charge_id\" : 0,\n  \"isallocated\" : true,\n  \"c_bp_bankaccount_id\" : 2,\n  \"creditcardnumber\" : \"creditcardnumber\",\n  \"original_ref_payment_id\" : 6,\n  \"routingno\" : \"routingno\",\n  \"isactive\" : true,\n  \"datetrx\" : \"datetrx\",\n  \"c_doctype_id\" : 1,\n  \"c_invoice_id\" : 1,\n  \"c_order_id\" : 4,\n  \"c_paymentbatch_id\" : 5,\n  \"trxtype\" : \"trxtype\",\n  \"bank_payment_msg_description\" : \"bank_payment_msg_description\",\n  \"a_name\" : \"a_name\",\n  \"rejectedcomments\" : \"rejectedcomments\",\n  \"creditcardvv\" : \"creditcardvv\",\n  \"ad_orgtrx_id\" : 5,\n  \"isapproved\" : true,\n  \"isselfservice\" : true,\n  \"a_city\" : \"a_city\",\n  \"c_pospaymentmedium_id\" : 6,\n  \"c_bankaccount_id\" : 2,\n  \"documentno\" : \"documentno\",\n  \"a_ident_dl\" : \"a_ident_dl\",\n  \"isreceipt\" : \"isreceipt\",\n  \"c_project_id\" : 8,\n  \"ponum\" : \"ponum\",\n  \"creditcardtype\" : \"creditcardtype\",\n  \"updatedby\" : 3,\n  \"c_activity_id\" : 5,\n  \"r_pnref_dc\" : \"r_pnref_dc\",\n  \"r_result\" : \"r_result\",\n  \"isprepayment\" : true,\n  \"payamt\" : 5.944895607614016,\n  \"isonline\" : true,\n  \"creditcardexpyy\" : 3,\n  \"r_cvv2match\" : true,\n  \"createdby\" : 9,\n  \"r_respmsg\" : \"r_respmsg\",\n  \"checked\" : true,\n  \"checkstatus\" : \"checkstatus\",\n  \"c_posjournal_id\" : 9,\n  \"ad_client_id\" : 6,\n  \"user2_id\" : 0,\n  \"isdelayedcapture\" : true,\n  \"couponbatchnumber\" : \"couponbatchnumber\",\n  \"c_currency_id\" : 1,\n  \"c_bankpaymentstatus_id\" : 9,\n  \"created\" : \"created\",\n  \"couponnumber\" : \"couponnumber\",\n  \"r_info\" : \"r_info\",\n  \"writeoffamt\" : 7.058770351582356,\n  \"a_bank\" : \"a_bank\",\n  \"swipe\" : \"swipe\",\n  \"accountno\" : \"accountno\",\n  \"posnet\" : \"posnet\",\n  \"taxamt\" : 3.353193347011243,\n  \"r_authcode\" : \"r_authcode\",\n  \"updated\" : \"updated\",\n  \"bank_payment_documentno\" : \"bank_payment_documentno\",\n  \"c_bpartner_id\" : 3,\n  \"a_zip\" : \"a_zip\",\n  \"issotrx\" : true,\n  \"voiceauthcode\" : \"voiceauthcode\",\n  \"tendertype\" : \"tendertype\",\n  \"ad_org_id\" : 1,\n  \"r_pnref\" : \"r_pnref\",\n  \"description\" : \"description\",\n  \"isoverunderpayment\" : true,\n  \"authmatch\" : true,\n  \"c_bank_id\" : 7,\n  \"a_state\" : \"a_state\",\n  \"a_cuit\" : \"a_cuit\",\n  \"orig_trxid\" : \"orig_trxid\",\n  \"overunderamt\" : 6.878052220127876,\n  \"discountamt\" : 6.965117697638846,\n  \"auditstatus\" : \"auditstatus\",\n  \"c_payment_id\" : 9,\n  \"c_invoice_check_rejected_id\" : 7,\n  \"a_ident_ssn\" : \"a_ident_ssn\",\n  \"c_charge_id\" : 7,\n  \"banklist_registerno\" : \"banklist_registerno\",\n  \"authcode\" : \"authcode\",\n  \"processed\" : true,\n  \"duedate\" : \"duedate\",\n  \"checkno\" : \"checkno\"\n} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PaymentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Procesa un pago", nickname = "processPayment", notes = "", response = String.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 409, message = "Imposible procesar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class) })
    @RequestMapping(value = "/v1.0/payments/{id}/process",
        produces = { "text/plain" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<String> processPayment(@ApiParam(value = "ID del pago a procesar",required=true) @PathVariable("id") Integer id
,@NotNull @ApiParam(value = "Accion a aplicar (completar, revertir, etc.)", required = true) @Valid @RequestParam(value = "action", required = true) String action
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PaymentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Recupera un pago en particular", nickname = "retrievePayment", notes = "Recupera la informacion de un pago en particular", response = Payment.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Payment.class) })
    @RequestMapping(value = "/v1.0/payments/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Payment> retrievePayment(@ApiParam(value = "ID del pago",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"r_avszip\" : \"r_avszip\",\n  \"dateemissioncheck\" : \"dateemissioncheck\",\n  \"r_authcode_dc\" : \"r_authcode_dc\",\n  \"rejecteddate\" : \"rejecteddate\",\n  \"chargeamt\" : 6,\n  \"c_campaign_id\" : 4,\n  \"isreconciled\" : true,\n  \"creditcardexpmm\" : 6,\n  \"docstatus\" : \"docstatus\",\n  \"ref_payment_id\" : 6,\n  \"dateacct\" : \"dateacct\",\n  \"r_avsaddr\" : \"r_avsaddr\",\n  \"ismanual\" : true,\n  \"m_boletadeposito_id\" : 1,\n  \"a_email\" : \"a_email\",\n  \"bank_payment_date\" : \"bank_payment_date\",\n  \"m_entidadfinancieraplan_id\" : 2,\n  \"a_country\" : \"a_country\",\n  \"a_street\" : \"a_street\",\n  \"c_conversiontype_id\" : 1,\n  \"micr\" : \"micr\",\n  \"user1_id\" : 7,\n  \"accounting_c_charge_id\" : 0,\n  \"isallocated\" : true,\n  \"c_bp_bankaccount_id\" : 2,\n  \"creditcardnumber\" : \"creditcardnumber\",\n  \"original_ref_payment_id\" : 6,\n  \"routingno\" : \"routingno\",\n  \"isactive\" : true,\n  \"datetrx\" : \"datetrx\",\n  \"c_doctype_id\" : 1,\n  \"c_invoice_id\" : 1,\n  \"c_order_id\" : 4,\n  \"c_paymentbatch_id\" : 5,\n  \"trxtype\" : \"trxtype\",\n  \"bank_payment_msg_description\" : \"bank_payment_msg_description\",\n  \"a_name\" : \"a_name\",\n  \"rejectedcomments\" : \"rejectedcomments\",\n  \"creditcardvv\" : \"creditcardvv\",\n  \"ad_orgtrx_id\" : 5,\n  \"isapproved\" : true,\n  \"isselfservice\" : true,\n  \"a_city\" : \"a_city\",\n  \"c_pospaymentmedium_id\" : 6,\n  \"c_bankaccount_id\" : 2,\n  \"documentno\" : \"documentno\",\n  \"a_ident_dl\" : \"a_ident_dl\",\n  \"isreceipt\" : \"isreceipt\",\n  \"c_project_id\" : 8,\n  \"ponum\" : \"ponum\",\n  \"creditcardtype\" : \"creditcardtype\",\n  \"updatedby\" : 3,\n  \"c_activity_id\" : 5,\n  \"r_pnref_dc\" : \"r_pnref_dc\",\n  \"r_result\" : \"r_result\",\n  \"isprepayment\" : true,\n  \"payamt\" : 5.944895607614016,\n  \"isonline\" : true,\n  \"creditcardexpyy\" : 3,\n  \"r_cvv2match\" : true,\n  \"createdby\" : 9,\n  \"r_respmsg\" : \"r_respmsg\",\n  \"checked\" : true,\n  \"checkstatus\" : \"checkstatus\",\n  \"c_posjournal_id\" : 9,\n  \"ad_client_id\" : 6,\n  \"user2_id\" : 0,\n  \"isdelayedcapture\" : true,\n  \"couponbatchnumber\" : \"couponbatchnumber\",\n  \"c_currency_id\" : 1,\n  \"c_bankpaymentstatus_id\" : 9,\n  \"created\" : \"created\",\n  \"couponnumber\" : \"couponnumber\",\n  \"r_info\" : \"r_info\",\n  \"writeoffamt\" : 7.058770351582356,\n  \"a_bank\" : \"a_bank\",\n  \"swipe\" : \"swipe\",\n  \"accountno\" : \"accountno\",\n  \"posnet\" : \"posnet\",\n  \"taxamt\" : 3.353193347011243,\n  \"r_authcode\" : \"r_authcode\",\n  \"updated\" : \"updated\",\n  \"bank_payment_documentno\" : \"bank_payment_documentno\",\n  \"c_bpartner_id\" : 3,\n  \"a_zip\" : \"a_zip\",\n  \"issotrx\" : true,\n  \"voiceauthcode\" : \"voiceauthcode\",\n  \"tendertype\" : \"tendertype\",\n  \"ad_org_id\" : 1,\n  \"r_pnref\" : \"r_pnref\",\n  \"description\" : \"description\",\n  \"isoverunderpayment\" : true,\n  \"authmatch\" : true,\n  \"c_bank_id\" : 7,\n  \"a_state\" : \"a_state\",\n  \"a_cuit\" : \"a_cuit\",\n  \"orig_trxid\" : \"orig_trxid\",\n  \"overunderamt\" : 6.878052220127876,\n  \"discountamt\" : 6.965117697638846,\n  \"auditstatus\" : \"auditstatus\",\n  \"c_payment_id\" : 9,\n  \"c_invoice_check_rejected_id\" : 7,\n  \"a_ident_ssn\" : \"a_ident_ssn\",\n  \"c_charge_id\" : 7,\n  \"banklist_registerno\" : \"banklist_registerno\",\n  \"authcode\" : \"authcode\",\n  \"processed\" : true,\n  \"duedate\" : \"duedate\",\n  \"checkno\" : \"checkno\"\n}", Payment.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PaymentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Actualiza por completo un pago existente", nickname = "updatePayment", notes = "", response = String.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 409, message = "Imposible actualizar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class) })
    @RequestMapping(value = "/v1.0/payments/{id}",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<String> updatePayment(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Payment body
,@ApiParam(value = "ID del pago a actualizar",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PaymentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
