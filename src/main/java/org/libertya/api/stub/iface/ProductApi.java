/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.46).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.libertya.api.stub.iface;

import org.libertya.api.stub.model.Product;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;


@Validated
public interface ProductApi {

    Logger log = LoggerFactory.getLogger(ProductApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @Operation(summary = "Nuevo articulo", description = "Agrega un nuevo articulo", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "product" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK. ID de producto creado es retornado", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "409", description = "Imposible insertar", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/v1.0/products",
        produces = { "text/plain" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<String> addProduct(@Parameter(in = ParameterIn.DEFAULT, description = "", required=true, schema=@Schema()) @Valid @RequestBody Product body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Elimina un articulo", description = "Elimina un articulo existente", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "product" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "409", description = "Imposible eliminar", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "404", description = "No encontrado", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "204", description = "OK", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<String> deleteProduct(@Parameter(in = ParameterIn.PATH, description = "ID de articulo", required=true, schema=@Schema()) @PathVariable("id") Integer id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Retrieve all products", description = "Retorna la lista completa de articulos", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "product" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Product.class)))) })
    @RequestMapping(value = "/v1.0/products",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Product>> getAllProducts(@Parameter(in = ParameterIn.QUERY, description = "Criterio de filtrado" ,schema=@Schema()) @Valid @RequestParam(value = "filter", required = false) String filter, @Parameter(in = ParameterIn.QUERY, description = "Campos a recuperar" ,schema=@Schema()) @Valid @RequestParam(value = "fields", required = false) String fields, @Parameter(in = ParameterIn.QUERY, description = "Criterio de ordenado" ,schema=@Schema()) @Valid @RequestParam(value = "sort", required = false) String sort, @Parameter(in = ParameterIn.QUERY, description = "Limite de elementos a retornar por pagina" ,schema=@Schema()) @Valid @RequestParam(value = "limit", required = false) Integer limit, @Parameter(in = ParameterIn.QUERY, description = "Numero de pagina" ,schema=@Schema()) @Valid @RequestParam(value = "page", required = false) Integer page) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {\n  \"guaranteedays\" : 4,\n  \"m_product_id\" : 9,\n  \"updatedby\" : 5,\n  \"m_product_category_id\" : 5,\n  \"lyeicodigomtx\" : \"lyeicodigomtx\",\n  \"r_mailtext_id\" : 6,\n  \"isverified\" : true,\n  \"producttype\" : \"producttype\",\n  \"m_product_family_id\" : 9,\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"createdby\" : 5,\n  \"ad_client_id\" : 0,\n  \"ispurchased\" : true,\n  \"sku\" : \"sku\",\n  \"common_ref\" : 5.962133916683182,\n  \"c_taxcategory_id\" : 9,\n  \"created\" : \"created\",\n  \"isstocked\" : true,\n  \"upc\" : \"upc\",\n  \"weight\" : 3.353193347011243,\n  \"istoformule\" : true,\n  \"isbom\" : true,\n  \"classification\" : \"classification\",\n  \"s_expensetype_id\" : 3,\n  \"volume\" : 6.704019297950036,\n  \"documentnote\" : \"documentnote\",\n  \"deliverytime_promised\" : 2.027123023002322,\n  \"lowlevel\" : 1,\n  \"iswebstorefeatured\" : true,\n  \"additionalvalues\" : [ {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  } ],\n  \"name\" : \"name\",\n  \"versionno\" : \"versionno\",\n  \"processing\" : \"processing\",\n  \"marketingblockeddescr\" : \"marketingblockeddescr\",\n  \"checkoutplace\" : \"checkoutplace\",\n  \"updated\" : \"updated\",\n  \"m_attributeset_id\" : 1,\n  \"isinvoiceprintdetails\" : true,\n  \"issummary\" : true,\n  \"ad_org_id\" : 6,\n  \"c_subscriptiontype_id\" : 7,\n  \"isactive\" : true,\n  \"referencedvalues\" : [ null, null ],\n  \"m_locator_id\" : 4,\n  \"description\" : \"description\",\n  \"issold\" : true,\n  \"m_intrastatcode_id\" : 1.1730742509559433,\n  \"discontinuedby\" : \"discontinuedby\",\n  \"sales_order_min\" : 8.762042012749001,\n  \"lyeiunidadesmtx\" : 1,\n  \"marketingblocked\" : true,\n  \"sales_order_pack\" : 9.018348186070783,\n  \"shelfwidth\" : 2,\n  \"shelfheight\" : 1,\n  \"descriptionurl\" : \"descriptionurl\",\n  \"shelfdepth\" : 6,\n  \"c_uom_id\" : 3,\n  \"ishelp\" : true,\n  \"m_attributesetinstance_id\" : 6,\n  \"value\" : \"value\",\n  \"isselfservice\" : true,\n  \"c_revenuerecognition_id\" : 2,\n  \"discontinued\" : true,\n  \"help\" : \"help\",\n  \"guaranteedaysmin\" : 7,\n  \"amortizationperc\" : 1.4658129805029452,\n  \"ispicklistprintdetails\" : true,\n  \"unitsperpallet\" : 6,\n  \"isdropship\" : true,\n  \"imageurl\" : \"imageurl\",\n  \"salesrep_id\" : 6,\n  \"isinventoried\" : true,\n  \"m_freightcategory_id\" : 7,\n  \"yearlife\" : 3,\n  \"s_resource_id\" : 6\n}, {\n  \"guaranteedays\" : 4,\n  \"m_product_id\" : 9,\n  \"updatedby\" : 5,\n  \"m_product_category_id\" : 5,\n  \"lyeicodigomtx\" : \"lyeicodigomtx\",\n  \"r_mailtext_id\" : 6,\n  \"isverified\" : true,\n  \"producttype\" : \"producttype\",\n  \"m_product_family_id\" : 9,\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"createdby\" : 5,\n  \"ad_client_id\" : 0,\n  \"ispurchased\" : true,\n  \"sku\" : \"sku\",\n  \"common_ref\" : 5.962133916683182,\n  \"c_taxcategory_id\" : 9,\n  \"created\" : \"created\",\n  \"isstocked\" : true,\n  \"upc\" : \"upc\",\n  \"weight\" : 3.353193347011243,\n  \"istoformule\" : true,\n  \"isbom\" : true,\n  \"classification\" : \"classification\",\n  \"s_expensetype_id\" : 3,\n  \"volume\" : 6.704019297950036,\n  \"documentnote\" : \"documentnote\",\n  \"deliverytime_promised\" : 2.027123023002322,\n  \"lowlevel\" : 1,\n  \"iswebstorefeatured\" : true,\n  \"additionalvalues\" : [ {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  } ],\n  \"name\" : \"name\",\n  \"versionno\" : \"versionno\",\n  \"processing\" : \"processing\",\n  \"marketingblockeddescr\" : \"marketingblockeddescr\",\n  \"checkoutplace\" : \"checkoutplace\",\n  \"updated\" : \"updated\",\n  \"m_attributeset_id\" : 1,\n  \"isinvoiceprintdetails\" : true,\n  \"issummary\" : true,\n  \"ad_org_id\" : 6,\n  \"c_subscriptiontype_id\" : 7,\n  \"isactive\" : true,\n  \"referencedvalues\" : [ null, null ],\n  \"m_locator_id\" : 4,\n  \"description\" : \"description\",\n  \"issold\" : true,\n  \"m_intrastatcode_id\" : 1.1730742509559433,\n  \"discontinuedby\" : \"discontinuedby\",\n  \"sales_order_min\" : 8.762042012749001,\n  \"lyeiunidadesmtx\" : 1,\n  \"marketingblocked\" : true,\n  \"sales_order_pack\" : 9.018348186070783,\n  \"shelfwidth\" : 2,\n  \"shelfheight\" : 1,\n  \"descriptionurl\" : \"descriptionurl\",\n  \"shelfdepth\" : 6,\n  \"c_uom_id\" : 3,\n  \"ishelp\" : true,\n  \"m_attributesetinstance_id\" : 6,\n  \"value\" : \"value\",\n  \"isselfservice\" : true,\n  \"c_revenuerecognition_id\" : 2,\n  \"discontinued\" : true,\n  \"help\" : \"help\",\n  \"guaranteedaysmin\" : 7,\n  \"amortizationperc\" : 1.4658129805029452,\n  \"ispicklistprintdetails\" : true,\n  \"unitsperpallet\" : 6,\n  \"isdropship\" : true,\n  \"imageurl\" : \"imageurl\",\n  \"salesrep_id\" : 6,\n  \"isinventoried\" : true,\n  \"m_freightcategory_id\" : 7,\n  \"yearlife\" : 3,\n  \"s_resource_id\" : 6\n} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Recupera un producto en particular", description = "Recupera la informacion de un articulo en particular", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "product" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Product.class))) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Product> retrieveProduct(@Parameter(in = ParameterIn.PATH, description = "ID del articulo", required=true, schema=@Schema()) @PathVariable("id") Integer id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"guaranteedays\" : 4,\n  \"m_product_id\" : 9,\n  \"updatedby\" : 5,\n  \"m_product_category_id\" : 5,\n  \"lyeicodigomtx\" : \"lyeicodigomtx\",\n  \"r_mailtext_id\" : 6,\n  \"isverified\" : true,\n  \"producttype\" : \"producttype\",\n  \"m_product_family_id\" : 9,\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"createdby\" : 5,\n  \"ad_client_id\" : 0,\n  \"ispurchased\" : true,\n  \"sku\" : \"sku\",\n  \"common_ref\" : 5.962133916683182,\n  \"c_taxcategory_id\" : 9,\n  \"created\" : \"created\",\n  \"isstocked\" : true,\n  \"upc\" : \"upc\",\n  \"weight\" : 3.353193347011243,\n  \"istoformule\" : true,\n  \"isbom\" : true,\n  \"classification\" : \"classification\",\n  \"s_expensetype_id\" : 3,\n  \"volume\" : 6.704019297950036,\n  \"documentnote\" : \"documentnote\",\n  \"deliverytime_promised\" : 2.027123023002322,\n  \"lowlevel\" : 1,\n  \"iswebstorefeatured\" : true,\n  \"additionalvalues\" : [ {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"value\",\n    \"key\" : \"key\"\n  } ],\n  \"name\" : \"name\",\n  \"versionno\" : \"versionno\",\n  \"processing\" : \"processing\",\n  \"marketingblockeddescr\" : \"marketingblockeddescr\",\n  \"checkoutplace\" : \"checkoutplace\",\n  \"updated\" : \"updated\",\n  \"m_attributeset_id\" : 1,\n  \"isinvoiceprintdetails\" : true,\n  \"issummary\" : true,\n  \"ad_org_id\" : 6,\n  \"c_subscriptiontype_id\" : 7,\n  \"isactive\" : true,\n  \"referencedvalues\" : [ null, null ],\n  \"m_locator_id\" : 4,\n  \"description\" : \"description\",\n  \"issold\" : true,\n  \"m_intrastatcode_id\" : 1.1730742509559433,\n  \"discontinuedby\" : \"discontinuedby\",\n  \"sales_order_min\" : 8.762042012749001,\n  \"lyeiunidadesmtx\" : 1,\n  \"marketingblocked\" : true,\n  \"sales_order_pack\" : 9.018348186070783,\n  \"shelfwidth\" : 2,\n  \"shelfheight\" : 1,\n  \"descriptionurl\" : \"descriptionurl\",\n  \"shelfdepth\" : 6,\n  \"c_uom_id\" : 3,\n  \"ishelp\" : true,\n  \"m_attributesetinstance_id\" : 6,\n  \"value\" : \"value\",\n  \"isselfservice\" : true,\n  \"c_revenuerecognition_id\" : 2,\n  \"discontinued\" : true,\n  \"help\" : \"help\",\n  \"guaranteedaysmin\" : 7,\n  \"amortizationperc\" : 1.4658129805029452,\n  \"ispicklistprintdetails\" : true,\n  \"unitsperpallet\" : 6,\n  \"isdropship\" : true,\n  \"imageurl\" : \"imageurl\",\n  \"salesrep_id\" : 6,\n  \"isinventoried\" : true,\n  \"m_freightcategory_id\" : 7,\n  \"yearlife\" : 3,\n  \"s_resource_id\" : 6\n}", Product.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @Operation(summary = "Actualiza por completo un articulo existente", description = "", security = {
        @SecurityRequirement(name = "jwtAuth")    }, tags={ "product" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "409", description = "Imposible actualizar", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "404", description = "No encontrado", content = @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "text/plain" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<String> updateProduct(@Parameter(in = ParameterIn.PATH, description = "ID del articulo a actualizar", required=true, schema=@Schema()) @PathVariable("id") Integer id, @Parameter(in = ParameterIn.DEFAULT, description = "", required=true, schema=@Schema()) @Valid @RequestBody Product body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}

