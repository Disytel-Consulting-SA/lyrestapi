/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.libertya.api.stub.iface;

import org.libertya.api.stub.model.Product;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Api(value = "Product", description = "the Product API")
public interface ProductApi {

    Logger log = LoggerFactory.getLogger(ProductApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Nuevo articulo", nickname = "addProduct", notes = "Agrega un nuevo articulo", response = String.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK. ID de producto creado es retornado", response = String.class),
        @ApiResponse(code = 409, message = "Imposible insertar", response = String.class) })
    @RequestMapping(value = "/v1.0/products",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<String> addProduct(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Product body
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Elimina un articulo", nickname = "deleteProduct", notes = "Elimina un articulo existente", response = String.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 409, message = "Imposible eliminar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class),
        @ApiResponse(code = 204, message = "OK", response = String.class) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "text/plain" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<String> deleteProduct(@ApiParam(value = "ID de articulo",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Retrieve all products", nickname = "getAllProducts", notes = "Retorna la lista completa de articulos", response = Product.class, responseContainer = "List", tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Product.class, responseContainer = "List") })
    @RequestMapping(value = "/v1.0/products",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Product>> getAllProducts(@ApiParam(value = "Criterio de filtrado") @Valid @RequestParam(value = "filter", required = false) String filter
,@ApiParam(value = "Campos a recuperar") @Valid @RequestParam(value = "fields", required = false) String fields
,@ApiParam(value = "Criterio de ordenado") @Valid @RequestParam(value = "sort", required = false) String sort
,@ApiParam(value = "Limite de elementos a retornar por pagina") @Valid @RequestParam(value = "limit", required = false) Integer limit
,@ApiParam(value = "Desplazamiento de salto a patir del primer elemento") @Valid @RequestParam(value = "offset", required = false) Integer offset
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {\n  \"guaranteedays\" : 4,\n  \"m_product_id\" : 9,\n  \"updatedby\" : 6,\n  \"m_product_category_id\" : 4,\n  \"r_mailtext_id\" : 9,\n  \"isverified\" : true,\n  \"producttype\" : \"producttype\",\n  \"m_product_family_id\" : 5,\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"createdby\" : 5,\n  \"ad_client_id\" : 0,\n  \"ispurchased\" : true,\n  \"sku\" : \"sku\",\n  \"common_ref\" : 5.962133916683182,\n  \"c_taxcategory_id\" : 9,\n  \"created\" : \"created\",\n  \"isstocked\" : true,\n  \"upc\" : \"upc\",\n  \"weight\" : 6.704019297950036,\n  \"istoformule\" : true,\n  \"isbom\" : true,\n  \"classification\" : \"classification\",\n  \"s_expensetype_id\" : 6,\n  \"volume\" : 5.944895607614016,\n  \"documentnote\" : \"documentnote\",\n  \"deliverytime_promised\" : 2.027123023002322,\n  \"lowlevel\" : 1,\n  \"iswebstorefeatured\" : true,\n  \"name\" : \"name\",\n  \"versionno\" : \"versionno\",\n  \"marketingblockeddescr\" : \"marketingblockeddescr\",\n  \"checkoutplace\" : \"checkoutplace\",\n  \"updated\" : \"updated\",\n  \"m_attributeset_id\" : 1,\n  \"isinvoiceprintdetails\" : true,\n  \"issummary\" : true,\n  \"ad_org_id\" : 6,\n  \"c_subscriptiontype_id\" : 7,\n  \"isactive\" : true,\n  \"m_locator_id\" : 1,\n  \"description\" : \"description\",\n  \"issold\" : true,\n  \"m_intrastatcode_id\" : 7.457744773683766,\n  \"discontinuedby\" : \"discontinuedby\",\n  \"sales_order_min\" : 6.683562403749608,\n  \"marketingblocked\" : true,\n  \"sales_order_pack\" : 8.762042012749001,\n  \"shelfwidth\" : 1,\n  \"shelfheight\" : 6,\n  \"descriptionurl\" : \"descriptionurl\",\n  \"shelfdepth\" : 3,\n  \"c_uom_id\" : 3,\n  \"ishelp\" : true,\n  \"m_attributesetinstance_id\" : 1,\n  \"value\" : \"value\",\n  \"isselfservice\" : true,\n  \"c_revenuerecognition_id\" : 2,\n  \"discontinued\" : true,\n  \"help\" : \"help\",\n  \"guaranteedaysmin\" : 7,\n  \"amortizationperc\" : 1.4658129805029452,\n  \"ispicklistprintdetails\" : true,\n  \"unitsperpallet\" : 6,\n  \"isdropship\" : true,\n  \"imageurl\" : \"imageurl\",\n  \"salesrep_id\" : 9,\n  \"isinventoried\" : true,\n  \"m_freightcategory_id\" : 6,\n  \"yearlife\" : 3,\n  \"s_resource_id\" : 2\n}, {\n  \"guaranteedays\" : 4,\n  \"m_product_id\" : 9,\n  \"updatedby\" : 6,\n  \"m_product_category_id\" : 4,\n  \"r_mailtext_id\" : 9,\n  \"isverified\" : true,\n  \"producttype\" : \"producttype\",\n  \"m_product_family_id\" : 5,\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"createdby\" : 5,\n  \"ad_client_id\" : 0,\n  \"ispurchased\" : true,\n  \"sku\" : \"sku\",\n  \"common_ref\" : 5.962133916683182,\n  \"c_taxcategory_id\" : 9,\n  \"created\" : \"created\",\n  \"isstocked\" : true,\n  \"upc\" : \"upc\",\n  \"weight\" : 6.704019297950036,\n  \"istoformule\" : true,\n  \"isbom\" : true,\n  \"classification\" : \"classification\",\n  \"s_expensetype_id\" : 6,\n  \"volume\" : 5.944895607614016,\n  \"documentnote\" : \"documentnote\",\n  \"deliverytime_promised\" : 2.027123023002322,\n  \"lowlevel\" : 1,\n  \"iswebstorefeatured\" : true,\n  \"name\" : \"name\",\n  \"versionno\" : \"versionno\",\n  \"marketingblockeddescr\" : \"marketingblockeddescr\",\n  \"checkoutplace\" : \"checkoutplace\",\n  \"updated\" : \"updated\",\n  \"m_attributeset_id\" : 1,\n  \"isinvoiceprintdetails\" : true,\n  \"issummary\" : true,\n  \"ad_org_id\" : 6,\n  \"c_subscriptiontype_id\" : 7,\n  \"isactive\" : true,\n  \"m_locator_id\" : 1,\n  \"description\" : \"description\",\n  \"issold\" : true,\n  \"m_intrastatcode_id\" : 7.457744773683766,\n  \"discontinuedby\" : \"discontinuedby\",\n  \"sales_order_min\" : 6.683562403749608,\n  \"marketingblocked\" : true,\n  \"sales_order_pack\" : 8.762042012749001,\n  \"shelfwidth\" : 1,\n  \"shelfheight\" : 6,\n  \"descriptionurl\" : \"descriptionurl\",\n  \"shelfdepth\" : 3,\n  \"c_uom_id\" : 3,\n  \"ishelp\" : true,\n  \"m_attributesetinstance_id\" : 1,\n  \"value\" : \"value\",\n  \"isselfservice\" : true,\n  \"c_revenuerecognition_id\" : 2,\n  \"discontinued\" : true,\n  \"help\" : \"help\",\n  \"guaranteedaysmin\" : 7,\n  \"amortizationperc\" : 1.4658129805029452,\n  \"ispicklistprintdetails\" : true,\n  \"unitsperpallet\" : 6,\n  \"isdropship\" : true,\n  \"imageurl\" : \"imageurl\",\n  \"salesrep_id\" : 9,\n  \"isinventoried\" : true,\n  \"m_freightcategory_id\" : 6,\n  \"yearlife\" : 3,\n  \"s_resource_id\" : 2\n} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Recupera un producto en particular", nickname = "retrieveProduct", notes = "Recupera la informacion de un articulo en particular", response = Product.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Product.class) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Product> retrieveProduct(@ApiParam(value = "ID del articulo",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"guaranteedays\" : 4,\n  \"m_product_id\" : 9,\n  \"updatedby\" : 6,\n  \"m_product_category_id\" : 4,\n  \"r_mailtext_id\" : 9,\n  \"isverified\" : true,\n  \"producttype\" : \"producttype\",\n  \"m_product_family_id\" : 5,\n  \"ad_componentobjectuid\" : \"ad_componentobjectuid\",\n  \"createdby\" : 5,\n  \"ad_client_id\" : 0,\n  \"ispurchased\" : true,\n  \"sku\" : \"sku\",\n  \"common_ref\" : 5.962133916683182,\n  \"c_taxcategory_id\" : 9,\n  \"created\" : \"created\",\n  \"isstocked\" : true,\n  \"upc\" : \"upc\",\n  \"weight\" : 6.704019297950036,\n  \"istoformule\" : true,\n  \"isbom\" : true,\n  \"classification\" : \"classification\",\n  \"s_expensetype_id\" : 6,\n  \"volume\" : 5.944895607614016,\n  \"documentnote\" : \"documentnote\",\n  \"deliverytime_promised\" : 2.027123023002322,\n  \"lowlevel\" : 1,\n  \"iswebstorefeatured\" : true,\n  \"name\" : \"name\",\n  \"versionno\" : \"versionno\",\n  \"marketingblockeddescr\" : \"marketingblockeddescr\",\n  \"checkoutplace\" : \"checkoutplace\",\n  \"updated\" : \"updated\",\n  \"m_attributeset_id\" : 1,\n  \"isinvoiceprintdetails\" : true,\n  \"issummary\" : true,\n  \"ad_org_id\" : 6,\n  \"c_subscriptiontype_id\" : 7,\n  \"isactive\" : true,\n  \"m_locator_id\" : 1,\n  \"description\" : \"description\",\n  \"issold\" : true,\n  \"m_intrastatcode_id\" : 7.457744773683766,\n  \"discontinuedby\" : \"discontinuedby\",\n  \"sales_order_min\" : 6.683562403749608,\n  \"marketingblocked\" : true,\n  \"sales_order_pack\" : 8.762042012749001,\n  \"shelfwidth\" : 1,\n  \"shelfheight\" : 6,\n  \"descriptionurl\" : \"descriptionurl\",\n  \"shelfdepth\" : 3,\n  \"c_uom_id\" : 3,\n  \"ishelp\" : true,\n  \"m_attributesetinstance_id\" : 1,\n  \"value\" : \"value\",\n  \"isselfservice\" : true,\n  \"c_revenuerecognition_id\" : 2,\n  \"discontinued\" : true,\n  \"help\" : \"help\",\n  \"guaranteedaysmin\" : 7,\n  \"amortizationperc\" : 1.4658129805029452,\n  \"ispicklistprintdetails\" : true,\n  \"unitsperpallet\" : 6,\n  \"isdropship\" : true,\n  \"imageurl\" : \"imageurl\",\n  \"salesrep_id\" : 9,\n  \"isinventoried\" : true,\n  \"m_freightcategory_id\" : 6,\n  \"yearlife\" : 3,\n  \"s_resource_id\" : 2\n}", Product.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Actualiza por completo un articulo existente", nickname = "updateProduct", notes = "", response = String.class, tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 409, message = "Imposible actualizar", response = String.class),
        @ApiResponse(code = 404, message = "No encontrado", response = String.class) })
    @RequestMapping(value = "/v1.0/products/{id}",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<String> updateProduct(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Product body
,@ApiParam(value = "ID del articulo a actualizar",required=true) @PathVariable("id") Integer id
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", String.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProductApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
